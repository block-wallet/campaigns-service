// Code generated by mockery v2.23.2. DO NOT EDIT.

package campaignsservicemocks

import (
	campaignsservicev1 "github.com/block-wallet/campaigns-service/protos/src/campaignsservicev1/campaigns"

	errors "github.com/block-wallet/campaigns-service/utils/errors"

	mock "github.com/stretchr/testify/mock"
)

// Validator is an autogenerated mock type for the Validator type
type Validator struct {
	mock.Mock
}

// ValidateCreateCampaignRequest provides a mock function with given fields: req
func (_m *Validator) ValidateCreateCampaignRequest(req *campaignsservicev1.CreateCampaignMsg) errors.RichError {
	ret := _m.Called(req)

	var r0 errors.RichError
	if rf, ok := ret.Get(0).(func(*campaignsservicev1.CreateCampaignMsg) errors.RichError); ok {
		r0 = rf(req)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(errors.RichError)
		}
	}

	return r0
}

// ValidateGetCampaignByIdRequest provides a mock function with given fields: req
func (_m *Validator) ValidateGetCampaignByIdRequest(req *campaignsservicev1.GetCampaignByIdMsg) errors.RichError {
	ret := _m.Called(req)

	var r0 errors.RichError
	if rf, ok := ret.Get(0).(func(*campaignsservicev1.GetCampaignByIdMsg) errors.RichError); ok {
		r0 = rf(req)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(errors.RichError)
		}
	}

	return r0
}

// ValidateGetCampaignsRequest provides a mock function with given fields: req
func (_m *Validator) ValidateGetCampaignsRequest(req *campaignsservicev1.GetCampaignsMsg) errors.RichError {
	ret := _m.Called(req)

	var r0 errors.RichError
	if rf, ok := ret.Get(0).(func(*campaignsservicev1.GetCampaignsMsg) errors.RichError); ok {
		r0 = rf(req)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(errors.RichError)
		}
	}

	return r0
}

// ValidateUpdateCampaignRequest provides a mock function with given fields: req
func (_m *Validator) ValidateUpdateCampaignRequest(req *campaignsservicev1.UpdateCampaignMsg) errors.RichError {
	ret := _m.Called(req)

	var r0 errors.RichError
	if rf, ok := ret.Get(0).(func(*campaignsservicev1.UpdateCampaignMsg) errors.RichError); ok {
		r0 = rf(req)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(errors.RichError)
		}
	}

	return r0
}

type mockConstructorTestingTNewValidator interface {
	mock.TestingT
	Cleanup(func())
}

// NewValidator creates a new instance of Validator. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewValidator(t mockConstructorTestingTNewValidator) *Validator {
	mock := &Validator{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
