// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: campaignsservicev1/campaigns/campaigns_service.proto

package campaignsservicev1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CampaignStatus int32

const (
	CampaignStatus_CAMPAIGN_STATUS_INVALID CampaignStatus = 0
	// Campaign is created but it hasn't started nor users can enroll in it.
	CampaignStatus_CAMPAIGN_STATUS_PENDING CampaignStatus = 1
	// Campaign is not active yet, but users can enroll in it
	CampaignStatus_CAMPAIGN_STATUS_WAITLIST CampaignStatus = 2
	// Campaign is active and users can enroll in it
	CampaignStatus_CAMPAIGN_STATUS_ACTIVE CampaignStatus = 3
	// Campaign is finished and users can claim its rewards
	CampaignStatus_CAMPAIGN_STATUS_FINISHED CampaignStatus = 4
	// Campaign is cancelled
	CampaignStatus_CAMPAIGN_STATUS_CANCELLED CampaignStatus = 5
)

// Enum value maps for CampaignStatus.
var (
	CampaignStatus_name = map[int32]string{
		0: "CAMPAIGN_STATUS_INVALID",
		1: "CAMPAIGN_STATUS_PENDING",
		2: "CAMPAIGN_STATUS_WAITLIST",
		3: "CAMPAIGN_STATUS_ACTIVE",
		4: "CAMPAIGN_STATUS_FINISHED",
		5: "CAMPAIGN_STATUS_CANCELLED",
	}
	CampaignStatus_value = map[string]int32{
		"CAMPAIGN_STATUS_INVALID":   0,
		"CAMPAIGN_STATUS_PENDING":   1,
		"CAMPAIGN_STATUS_WAITLIST":  2,
		"CAMPAIGN_STATUS_ACTIVE":    3,
		"CAMPAIGN_STATUS_FINISHED":  4,
		"CAMPAIGN_STATUS_CANCELLED": 5,
	}
)

func (x CampaignStatus) Enum() *CampaignStatus {
	p := new(CampaignStatus)
	*p = x
	return p
}

func (x CampaignStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CampaignStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_campaignsservicev1_campaigns_campaigns_service_proto_enumTypes[0].Descriptor()
}

func (CampaignStatus) Type() protoreflect.EnumType {
	return &file_campaignsservicev1_campaigns_campaigns_service_proto_enumTypes[0]
}

func (x CampaignStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CampaignStatus.Descriptor instead.
func (CampaignStatus) EnumDescriptor() ([]byte, []int) {
	return file_campaignsservicev1_campaigns_campaigns_service_proto_rawDescGZIP(), []int{0}
}

type EnrollmentMode int32

const (
	EnrollmentMode_ENROLLMENT_MODE_INVALID   EnrollmentMode = 0
	EnrollmentMode_INSTANCE_UNLIMITED_ENROLL EnrollmentMode = 1
	EnrollmentMode_INSTANCE_SINGLE_ENROLL    EnrollmentMode = 2
)

// Enum value maps for EnrollmentMode.
var (
	EnrollmentMode_name = map[int32]string{
		0: "ENROLLMENT_MODE_INVALID",
		1: "INSTANCE_UNLIMITED_ENROLL",
		2: "INSTANCE_SINGLE_ENROLL",
	}
	EnrollmentMode_value = map[string]int32{
		"ENROLLMENT_MODE_INVALID":   0,
		"INSTANCE_UNLIMITED_ENROLL": 1,
		"INSTANCE_SINGLE_ENROLL":    2,
	}
)

func (x EnrollmentMode) Enum() *EnrollmentMode {
	p := new(EnrollmentMode)
	*p = x
	return p
}

func (x EnrollmentMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EnrollmentMode) Descriptor() protoreflect.EnumDescriptor {
	return file_campaignsservicev1_campaigns_campaigns_service_proto_enumTypes[1].Descriptor()
}

func (EnrollmentMode) Type() protoreflect.EnumType {
	return &file_campaignsservicev1_campaigns_campaigns_service_proto_enumTypes[1]
}

func (x EnrollmentMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EnrollmentMode.Descriptor instead.
func (EnrollmentMode) EnumDescriptor() ([]byte, []int) {
	return file_campaignsservicev1_campaigns_campaigns_service_proto_rawDescGZIP(), []int{1}
}

type CampaignType int32

const (
	CampaignType_CAMPAIGN_TYPE_INVALID        CampaignType = 0
	CampaignType_CAMPAIGN_TYPE_PARTNER_OFFERS CampaignType = 1
	CampaignType_CAMPAIGN_TYPE_GALXE          CampaignType = 2
)

// Enum value maps for CampaignType.
var (
	CampaignType_name = map[int32]string{
		0: "CAMPAIGN_TYPE_INVALID",
		1: "CAMPAIGN_TYPE_PARTNER_OFFERS",
		2: "CAMPAIGN_TYPE_GALXE",
	}
	CampaignType_value = map[string]int32{
		"CAMPAIGN_TYPE_INVALID":        0,
		"CAMPAIGN_TYPE_PARTNER_OFFERS": 1,
		"CAMPAIGN_TYPE_GALXE":          2,
	}
)

func (x CampaignType) Enum() *CampaignType {
	p := new(CampaignType)
	*p = x
	return p
}

func (x CampaignType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CampaignType) Descriptor() protoreflect.EnumDescriptor {
	return file_campaignsservicev1_campaigns_campaigns_service_proto_enumTypes[2].Descriptor()
}

func (CampaignType) Type() protoreflect.EnumType {
	return &file_campaignsservicev1_campaigns_campaigns_service_proto_enumTypes[2]
}

func (x CampaignType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CampaignType.Descriptor instead.
func (CampaignType) EnumDescriptor() ([]byte, []int) {
	return file_campaignsservicev1_campaigns_campaigns_service_proto_rawDescGZIP(), []int{2}
}

type RewardType int32

const (
	RewardType_REWARD_TYPE_INVALID RewardType = 0
	RewardType_REWARD_TYPE_PODIUM  RewardType = 1
	RewardType_REWARD_TYPE_SINGLE  RewardType = 2
	RewardType_REWARD_TYPE_DYNAMIC RewardType = 3
)

// Enum value maps for RewardType.
var (
	RewardType_name = map[int32]string{
		0: "REWARD_TYPE_INVALID",
		1: "REWARD_TYPE_PODIUM",
		2: "REWARD_TYPE_SINGLE",
		3: "REWARD_TYPE_DYNAMIC",
	}
	RewardType_value = map[string]int32{
		"REWARD_TYPE_INVALID": 0,
		"REWARD_TYPE_PODIUM":  1,
		"REWARD_TYPE_SINGLE":  2,
		"REWARD_TYPE_DYNAMIC": 3,
	}
)

func (x RewardType) Enum() *RewardType {
	p := new(RewardType)
	*p = x
	return p
}

func (x RewardType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RewardType) Descriptor() protoreflect.EnumDescriptor {
	return file_campaignsservicev1_campaigns_campaigns_service_proto_enumTypes[3].Descriptor()
}

func (RewardType) Type() protoreflect.EnumType {
	return &file_campaignsservicev1_campaigns_campaigns_service_proto_enumTypes[3]
}

func (x RewardType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RewardType.Descriptor instead.
func (RewardType) EnumDescriptor() ([]byte, []int) {
	return file_campaignsservicev1_campaigns_campaigns_service_proto_rawDescGZIP(), []int{3}
}

// Requesting campaigns using filters.
type GetCampaignsMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filters *GetCampaignsFilters `protobuf:"bytes,1,opt,name=filters,proto3" json:"filters,omitempty"`
}

func (x *GetCampaignsMsg) Reset() {
	*x = GetCampaignsMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campaignsservicev1_campaigns_campaigns_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCampaignsMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCampaignsMsg) ProtoMessage() {}

func (x *GetCampaignsMsg) ProtoReflect() protoreflect.Message {
	mi := &file_campaignsservicev1_campaigns_campaigns_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCampaignsMsg.ProtoReflect.Descriptor instead.
func (*GetCampaignsMsg) Descriptor() ([]byte, []int) {
	return file_campaignsservicev1_campaigns_campaigns_service_proto_rawDescGZIP(), []int{0}
}

func (x *GetCampaignsMsg) GetFilters() *GetCampaignsFilters {
	if x != nil {
		return x.Filters
	}
	return nil
}

// Requesting one campaign by id
type GetCampaignByIdMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetCampaignByIdMsg) Reset() {
	*x = GetCampaignByIdMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campaignsservicev1_campaigns_campaigns_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCampaignByIdMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCampaignByIdMsg) ProtoMessage() {}

func (x *GetCampaignByIdMsg) ProtoReflect() protoreflect.Message {
	mi := &file_campaignsservicev1_campaigns_campaigns_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCampaignByIdMsg.ProtoReflect.Descriptor instead.
func (*GetCampaignByIdMsg) Descriptor() ([]byte, []int) {
	return file_campaignsservicev1_campaigns_campaigns_service_proto_rawDescGZIP(), []int{1}
}

func (x *GetCampaignByIdMsg) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type CreateCampaignMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Campaign *CreateCampaignMsg_CreateCampaignInput `protobuf:"bytes,1,opt,name=campaign,proto3" json:"campaign,omitempty"`
}

func (x *CreateCampaignMsg) Reset() {
	*x = CreateCampaignMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campaignsservicev1_campaigns_campaigns_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCampaignMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCampaignMsg) ProtoMessage() {}

func (x *CreateCampaignMsg) ProtoReflect() protoreflect.Message {
	mi := &file_campaignsservicev1_campaigns_campaigns_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCampaignMsg.ProtoReflect.Descriptor instead.
func (*CreateCampaignMsg) Descriptor() ([]byte, []int) {
	return file_campaignsservicev1_campaigns_campaigns_service_proto_rawDescGZIP(), []int{2}
}

func (x *CreateCampaignMsg) GetCampaign() *CreateCampaignMsg_CreateCampaignInput {
	if x != nil {
		return x.Campaign
	}
	return nil
}

type CreateCampaignReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Campaign *Campaign `protobuf:"bytes,1,opt,name=campaign,proto3" json:"campaign,omitempty"`
}

func (x *CreateCampaignReply) Reset() {
	*x = CreateCampaignReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campaignsservicev1_campaigns_campaigns_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCampaignReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCampaignReply) ProtoMessage() {}

func (x *CreateCampaignReply) ProtoReflect() protoreflect.Message {
	mi := &file_campaignsservicev1_campaigns_campaigns_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCampaignReply.ProtoReflect.Descriptor instead.
func (*CreateCampaignReply) Descriptor() ([]byte, []int) {
	return file_campaignsservicev1_campaigns_campaigns_service_proto_rawDescGZIP(), []int{3}
}

func (x *CreateCampaignReply) GetCampaign() *Campaign {
	if x != nil {
		return x.Campaign
	}
	return nil
}

type GetCampaignsFilters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status   []CampaignStatus        `protobuf:"varint,1,rep,packed,name=status,proto3,enum=campaignsservice.v1.CampaignStatus" json:"status,omitempty"`
	FromDate *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=from_date,json=fromDate,proto3" json:"from_date,omitempty"`
	ToDate   *wrapperspb.StringValue `protobuf:"bytes,3,opt,name=to_date,json=toDate,proto3" json:"to_date,omitempty"`
	Tags     []string                `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty"`
	ChainIds []uint32                `protobuf:"varint,5,rep,packed,name=chain_ids,json=chainIds,proto3" json:"chain_ids,omitempty"`
}

func (x *GetCampaignsFilters) Reset() {
	*x = GetCampaignsFilters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campaignsservicev1_campaigns_campaigns_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCampaignsFilters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCampaignsFilters) ProtoMessage() {}

func (x *GetCampaignsFilters) ProtoReflect() protoreflect.Message {
	mi := &file_campaignsservicev1_campaigns_campaigns_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCampaignsFilters.ProtoReflect.Descriptor instead.
func (*GetCampaignsFilters) Descriptor() ([]byte, []int) {
	return file_campaignsservicev1_campaigns_campaigns_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetCampaignsFilters) GetStatus() []CampaignStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *GetCampaignsFilters) GetFromDate() *wrapperspb.StringValue {
	if x != nil {
		return x.FromDate
	}
	return nil
}

func (x *GetCampaignsFilters) GetToDate() *wrapperspb.StringValue {
	if x != nil {
		return x.ToDate
	}
	return nil
}

func (x *GetCampaignsFilters) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *GetCampaignsFilters) GetChainIds() []uint32 {
	if x != nil {
		return x.ChainIds
	}
	return nil
}

// Collection of campaigns.
type GetCampaignsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Campaigns []*Campaign `protobuf:"bytes,1,rep,name=campaigns,proto3" json:"campaigns,omitempty"`
}

func (x *GetCampaignsReply) Reset() {
	*x = GetCampaignsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campaignsservicev1_campaigns_campaigns_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCampaignsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCampaignsReply) ProtoMessage() {}

func (x *GetCampaignsReply) ProtoReflect() protoreflect.Message {
	mi := &file_campaignsservicev1_campaigns_campaigns_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCampaignsReply.ProtoReflect.Descriptor instead.
func (*GetCampaignsReply) Descriptor() ([]byte, []int) {
	return file_campaignsservicev1_campaigns_campaigns_service_proto_rawDescGZIP(), []int{5}
}

func (x *GetCampaignsReply) GetCampaigns() []*Campaign {
	if x != nil {
		return x.Campaigns
	}
	return nil
}

type GetCampaignByIdReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Campaign *Campaign `protobuf:"bytes,1,opt,name=campaign,proto3" json:"campaign,omitempty"`
}

func (x *GetCampaignByIdReply) Reset() {
	*x = GetCampaignByIdReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campaignsservicev1_campaigns_campaigns_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCampaignByIdReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCampaignByIdReply) ProtoMessage() {}

func (x *GetCampaignByIdReply) ProtoReflect() protoreflect.Message {
	mi := &file_campaignsservicev1_campaigns_campaigns_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCampaignByIdReply.ProtoReflect.Descriptor instead.
func (*GetCampaignByIdReply) Descriptor() ([]byte, []int) {
	return file_campaignsservicev1_campaigns_campaigns_service_proto_rawDescGZIP(), []int{6}
}

func (x *GetCampaignByIdReply) GetCampaign() *Campaign {
	if x != nil {
		return x.Campaign
	}
	return nil
}

type GetCampaignAccountsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Accounts []string `protobuf:"bytes,1,rep,name=accounts,proto3" json:"accounts,omitempty"`
}

func (x *GetCampaignAccountsReply) Reset() {
	*x = GetCampaignAccountsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campaignsservicev1_campaigns_campaigns_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCampaignAccountsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCampaignAccountsReply) ProtoMessage() {}

func (x *GetCampaignAccountsReply) ProtoReflect() protoreflect.Message {
	mi := &file_campaignsservicev1_campaigns_campaigns_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCampaignAccountsReply.ProtoReflect.Descriptor instead.
func (*GetCampaignAccountsReply) Descriptor() ([]byte, []int) {
	return file_campaignsservicev1_campaigns_campaigns_service_proto_rawDescGZIP(), []int{7}
}

func (x *GetCampaignAccountsReply) GetAccounts() []string {
	if x != nil {
		return x.Accounts
	}
	return nil
}

type GetCampaignEnrollMessageReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *GetCampaignEnrollMessageReply) Reset() {
	*x = GetCampaignEnrollMessageReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campaignsservicev1_campaigns_campaigns_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCampaignEnrollMessageReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCampaignEnrollMessageReply) ProtoMessage() {}

func (x *GetCampaignEnrollMessageReply) ProtoReflect() protoreflect.Message {
	mi := &file_campaignsservicev1_campaigns_campaigns_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCampaignEnrollMessageReply.ProtoReflect.Descriptor instead.
func (*GetCampaignEnrollMessageReply) Descriptor() ([]byte, []int) {
	return file_campaignsservicev1_campaigns_campaigns_service_proto_rawDescGZIP(), []int{8}
}

func (x *GetCampaignEnrollMessageReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GalxeCampaignMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CredentialId string `protobuf:"bytes,1,opt,name=credential_id,json=credentialId,proto3" json:"credential_id,omitempty"`
}

func (x *GalxeCampaignMetadata) Reset() {
	*x = GalxeCampaignMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campaignsservicev1_campaigns_campaigns_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GalxeCampaignMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GalxeCampaignMetadata) ProtoMessage() {}

func (x *GalxeCampaignMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_campaignsservicev1_campaigns_campaigns_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GalxeCampaignMetadata.ProtoReflect.Descriptor instead.
func (*GalxeCampaignMetadata) Descriptor() ([]byte, []int) {
	return file_campaignsservicev1_campaigns_campaigns_service_proto_rawDescGZIP(), []int{9}
}

func (x *GalxeCampaignMetadata) GetCredentialId() string {
	if x != nil {
		return x.CredentialId
	}
	return ""
}

type PartnerOffersCampaignMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PartnerOffersCampaignMetadata) Reset() {
	*x = PartnerOffersCampaignMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campaignsservicev1_campaigns_campaigns_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PartnerOffersCampaignMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartnerOffersCampaignMetadata) ProtoMessage() {}

func (x *PartnerOffersCampaignMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_campaignsservicev1_campaigns_campaigns_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartnerOffersCampaignMetadata.ProtoReflect.Descriptor instead.
func (*PartnerOffersCampaignMetadata) Descriptor() ([]byte, []int) {
	return file_campaignsservicev1_campaigns_campaigns_service_proto_rawDescGZIP(), []int{10}
}

type Eligibility struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsEligible     bool   `protobuf:"varint,1,opt,name=is_eligible,json=isEligible,proto3" json:"is_eligible,omitempty"`
	RewardedAmount string `protobuf:"bytes,2,opt,name=rewarded_amount,json=rewardedAmount,proto3" json:"rewarded_amount,omitempty"`
}

func (x *Eligibility) Reset() {
	*x = Eligibility{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campaignsservicev1_campaigns_campaigns_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Eligibility) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Eligibility) ProtoMessage() {}

func (x *Eligibility) ProtoReflect() protoreflect.Message {
	mi := &file_campaignsservicev1_campaigns_campaigns_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Eligibility.ProtoReflect.Descriptor instead.
func (*Eligibility) Descriptor() ([]byte, []int) {
	return file_campaignsservicev1_campaigns_campaigns_service_proto_rawDescGZIP(), []int{11}
}

func (x *Eligibility) GetIsEligible() bool {
	if x != nil {
		return x.IsEligible
	}
	return false
}

func (x *Eligibility) GetRewardedAmount() string {
	if x != nil {
		return x.RewardedAmount
	}
	return ""
}

type Participant struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountAddress  string       `protobuf:"bytes,1,opt,name=account_address,json=accountAddress,proto3" json:"account_address,omitempty"`
	EarlyEnrollment bool         `protobuf:"varint,2,opt,name=early_enrollment,json=earlyEnrollment,proto3" json:"early_enrollment,omitempty"`
	Eligibility     *Eligibility `protobuf:"bytes,3,opt,name=eligibility,proto3" json:"eligibility,omitempty"`
}

func (x *Participant) Reset() {
	*x = Participant{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campaignsservicev1_campaigns_campaigns_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Participant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Participant) ProtoMessage() {}

func (x *Participant) ProtoReflect() protoreflect.Message {
	mi := &file_campaignsservicev1_campaigns_campaigns_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Participant.ProtoReflect.Descriptor instead.
func (*Participant) Descriptor() ([]byte, []int) {
	return file_campaignsservicev1_campaigns_campaigns_service_proto_rawDescGZIP(), []int{12}
}

func (x *Participant) GetAccountAddress() string {
	if x != nil {
		return x.AccountAddress
	}
	return ""
}

func (x *Participant) GetEarlyEnrollment() bool {
	if x != nil {
		return x.EarlyEnrollment
	}
	return false
}

func (x *Participant) GetEligibility() *Eligibility {
	if x != nil {
		return x.Eligibility
	}
	return nil
}

type Campaign struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	SupportedChains []uint32       `protobuf:"varint,2,rep,packed,name=supported_chains,json=supportedChains,proto3" json:"supported_chains,omitempty"`
	Name            string         `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description     string         `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Status          CampaignStatus `protobuf:"varint,5,opt,name=status,proto3,enum=campaignsservice.v1.CampaignStatus" json:"status,omitempty"`
	StartDate       string         `protobuf:"bytes,6,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate         string         `protobuf:"bytes,7,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	Rewards         *Rewards       `protobuf:"bytes,8,opt,name=rewards,proto3" json:"rewards,omitempty"`
	Accounts        []string       `protobuf:"bytes,9,rep,name=accounts,proto3" json:"accounts,omitempty"`
	Tags            []string       `protobuf:"bytes,11,rep,name=tags,proto3" json:"tags,omitempty"`
	EnrollMessage   string         `protobuf:"bytes,12,opt,name=enroll_message,json=enrollMessage,proto3" json:"enroll_message,omitempty"`
	EnrollmentMode  EnrollmentMode `protobuf:"varint,13,opt,name=enrollment_mode,json=enrollmentMode,proto3,enum=campaignsservice.v1.EnrollmentMode" json:"enrollment_mode,omitempty"`
	CampaignType    CampaignType   `protobuf:"varint,14,opt,name=campaign_type,json=campaignType,proto3,enum=campaignsservice.v1.CampaignType" json:"campaign_type,omitempty"`
	Participants    []*Participant `protobuf:"bytes,15,rep,name=participants,proto3" json:"participants,omitempty"`
	CreatedAt       string         `protobuf:"bytes,16,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt       string         `protobuf:"bytes,17,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	// Types that are assignable to CampaignMetadata:
	//
	//	*Campaign_GalxeMetadata
	//	*Campaign_PartnerOffersMetadata
	CampaignMetadata isCampaign_CampaignMetadata `protobuf_oneof:"campaign_metadata"`
}

func (x *Campaign) Reset() {
	*x = Campaign{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campaignsservicev1_campaigns_campaigns_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Campaign) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Campaign) ProtoMessage() {}

func (x *Campaign) ProtoReflect() protoreflect.Message {
	mi := &file_campaignsservicev1_campaigns_campaigns_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Campaign.ProtoReflect.Descriptor instead.
func (*Campaign) Descriptor() ([]byte, []int) {
	return file_campaignsservicev1_campaigns_campaigns_service_proto_rawDescGZIP(), []int{13}
}

func (x *Campaign) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Campaign) GetSupportedChains() []uint32 {
	if x != nil {
		return x.SupportedChains
	}
	return nil
}

func (x *Campaign) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Campaign) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Campaign) GetStatus() CampaignStatus {
	if x != nil {
		return x.Status
	}
	return CampaignStatus_CAMPAIGN_STATUS_INVALID
}

func (x *Campaign) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *Campaign) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

func (x *Campaign) GetRewards() *Rewards {
	if x != nil {
		return x.Rewards
	}
	return nil
}

func (x *Campaign) GetAccounts() []string {
	if x != nil {
		return x.Accounts
	}
	return nil
}

func (x *Campaign) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *Campaign) GetEnrollMessage() string {
	if x != nil {
		return x.EnrollMessage
	}
	return ""
}

func (x *Campaign) GetEnrollmentMode() EnrollmentMode {
	if x != nil {
		return x.EnrollmentMode
	}
	return EnrollmentMode_ENROLLMENT_MODE_INVALID
}

func (x *Campaign) GetCampaignType() CampaignType {
	if x != nil {
		return x.CampaignType
	}
	return CampaignType_CAMPAIGN_TYPE_INVALID
}

func (x *Campaign) GetParticipants() []*Participant {
	if x != nil {
		return x.Participants
	}
	return nil
}

func (x *Campaign) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Campaign) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (m *Campaign) GetCampaignMetadata() isCampaign_CampaignMetadata {
	if m != nil {
		return m.CampaignMetadata
	}
	return nil
}

func (x *Campaign) GetGalxeMetadata() *GalxeCampaignMetadata {
	if x, ok := x.GetCampaignMetadata().(*Campaign_GalxeMetadata); ok {
		return x.GalxeMetadata
	}
	return nil
}

func (x *Campaign) GetPartnerOffersMetadata() *PartnerOffersCampaignMetadata {
	if x, ok := x.GetCampaignMetadata().(*Campaign_PartnerOffersMetadata); ok {
		return x.PartnerOffersMetadata
	}
	return nil
}

type isCampaign_CampaignMetadata interface {
	isCampaign_CampaignMetadata()
}

type Campaign_GalxeMetadata struct {
	GalxeMetadata *GalxeCampaignMetadata `protobuf:"bytes,18,opt,name=galxe_metadata,json=galxeMetadata,proto3,oneof"`
}

type Campaign_PartnerOffersMetadata struct {
	PartnerOffersMetadata *PartnerOffersCampaignMetadata `protobuf:"bytes,19,opt,name=partner_offers_metadata,json=partnerOffersMetadata,proto3,oneof"`
}

func (*Campaign_GalxeMetadata) isCampaign_CampaignMetadata() {}

func (*Campaign_PartnerOffersMetadata) isCampaign_CampaignMetadata() {}

// The rewards for the campaigns eligible accounts
type Rewards struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token   *MultichainToken `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Amounts []string         `protobuf:"bytes,2,rep,name=amounts,proto3" json:"amounts,omitempty"`
	Type    RewardType       `protobuf:"varint,3,opt,name=type,proto3,enum=campaignsservice.v1.RewardType" json:"type,omitempty"`
}

func (x *Rewards) Reset() {
	*x = Rewards{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campaignsservicev1_campaigns_campaigns_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Rewards) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rewards) ProtoMessage() {}

func (x *Rewards) ProtoReflect() protoreflect.Message {
	mi := &file_campaignsservicev1_campaigns_campaigns_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rewards.ProtoReflect.Descriptor instead.
func (*Rewards) Descriptor() ([]byte, []int) {
	return file_campaignsservicev1_campaigns_campaigns_service_proto_rawDescGZIP(), []int{14}
}

func (x *Rewards) GetToken() *MultichainToken {
	if x != nil {
		return x.Token
	}
	return nil
}

func (x *Rewards) GetAmounts() []string {
	if x != nil {
		return x.Amounts
	}
	return nil
}

func (x *Rewards) GetType() RewardType {
	if x != nil {
		return x.Type
	}
	return RewardType_REWARD_TYPE_INVALID
}

type UpdateCampaignMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CampaignId       string         `protobuf:"bytes,1,opt,name=campaign_id,json=campaignId,proto3" json:"campaign_id,omitempty"`
	Status           CampaignStatus `protobuf:"varint,2,opt,name=status,proto3,enum=campaignsservice.v1.CampaignStatus" json:"status,omitempty"`
	EligibleAccounts []string       `protobuf:"bytes,3,rep,name=eligible_accounts,json=eligibleAccounts,proto3" json:"eligible_accounts,omitempty"`
}

func (x *UpdateCampaignMsg) Reset() {
	*x = UpdateCampaignMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campaignsservicev1_campaigns_campaigns_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCampaignMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCampaignMsg) ProtoMessage() {}

func (x *UpdateCampaignMsg) ProtoReflect() protoreflect.Message {
	mi := &file_campaignsservicev1_campaigns_campaigns_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCampaignMsg.ProtoReflect.Descriptor instead.
func (*UpdateCampaignMsg) Descriptor() ([]byte, []int) {
	return file_campaignsservicev1_campaigns_campaigns_service_proto_rawDescGZIP(), []int{15}
}

func (x *UpdateCampaignMsg) GetCampaignId() string {
	if x != nil {
		return x.CampaignId
	}
	return ""
}

func (x *UpdateCampaignMsg) GetStatus() CampaignStatus {
	if x != nil {
		return x.Status
	}
	return CampaignStatus_CAMPAIGN_STATUS_INVALID
}

func (x *UpdateCampaignMsg) GetEligibleAccounts() []string {
	if x != nil {
		return x.EligibleAccounts
	}
	return nil
}

type UpdateCampaignReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Campaign *Campaign `protobuf:"bytes,1,opt,name=campaign,proto3" json:"campaign,omitempty"`
}

func (x *UpdateCampaignReply) Reset() {
	*x = UpdateCampaignReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campaignsservicev1_campaigns_campaigns_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCampaignReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCampaignReply) ProtoMessage() {}

func (x *UpdateCampaignReply) ProtoReflect() protoreflect.Message {
	mi := &file_campaignsservicev1_campaigns_campaigns_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCampaignReply.ProtoReflect.Descriptor instead.
func (*UpdateCampaignReply) Descriptor() ([]byte, []int) {
	return file_campaignsservicev1_campaigns_campaigns_service_proto_rawDescGZIP(), []int{16}
}

func (x *UpdateCampaignReply) GetCampaign() *Campaign {
	if x != nil {
		return x.Campaign
	}
	return nil
}

// A token with the contract_address indexed by chain
type MultichainToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name              string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Decimals          int32             `protobuf:"varint,3,opt,name=decimals,proto3" json:"decimals,omitempty"`
	Symbol            string            `protobuf:"bytes,4,opt,name=symbol,proto3" json:"symbol,omitempty"`
	ContractAddresses map[string]string `protobuf:"bytes,5,rep,name=contract_addresses,json=contractAddresses,proto3" json:"contract_addresses,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *MultichainToken) Reset() {
	*x = MultichainToken{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campaignsservicev1_campaigns_campaigns_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultichainToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultichainToken) ProtoMessage() {}

func (x *MultichainToken) ProtoReflect() protoreflect.Message {
	mi := &file_campaignsservicev1_campaigns_campaigns_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultichainToken.ProtoReflect.Descriptor instead.
func (*MultichainToken) Descriptor() ([]byte, []int) {
	return file_campaignsservicev1_campaigns_campaigns_service_proto_rawDescGZIP(), []int{17}
}

func (x *MultichainToken) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MultichainToken) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MultichainToken) GetDecimals() int32 {
	if x != nil {
		return x.Decimals
	}
	return 0
}

func (x *MultichainToken) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *MultichainToken) GetContractAddresses() map[string]string {
	if x != nil {
		return x.ContractAddresses
	}
	return nil
}

type EnrollInCampaignMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CampaignId     string `protobuf:"bytes,1,opt,name=campaign_id,json=campaignId,proto3" json:"campaign_id,omitempty"`
	AccountAddress string `protobuf:"bytes,2,opt,name=account_address,json=accountAddress,proto3" json:"account_address,omitempty"`
	Signature      string `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *EnrollInCampaignMsg) Reset() {
	*x = EnrollInCampaignMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campaignsservicev1_campaigns_campaigns_service_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnrollInCampaignMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnrollInCampaignMsg) ProtoMessage() {}

func (x *EnrollInCampaignMsg) ProtoReflect() protoreflect.Message {
	mi := &file_campaignsservicev1_campaigns_campaigns_service_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnrollInCampaignMsg.ProtoReflect.Descriptor instead.
func (*EnrollInCampaignMsg) Descriptor() ([]byte, []int) {
	return file_campaignsservicev1_campaigns_campaigns_service_proto_rawDescGZIP(), []int{18}
}

func (x *EnrollInCampaignMsg) GetCampaignId() string {
	if x != nil {
		return x.CampaignId
	}
	return ""
}

func (x *EnrollInCampaignMsg) GetAccountAddress() string {
	if x != nil {
		return x.AccountAddress
	}
	return ""
}

func (x *EnrollInCampaignMsg) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

type EnrollInCampaignReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EnrollInCampaignReply) Reset() {
	*x = EnrollInCampaignReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campaignsservicev1_campaigns_campaigns_service_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnrollInCampaignReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnrollInCampaignReply) ProtoMessage() {}

func (x *EnrollInCampaignReply) ProtoReflect() protoreflect.Message {
	mi := &file_campaignsservicev1_campaigns_campaigns_service_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnrollInCampaignReply.ProtoReflect.Descriptor instead.
func (*EnrollInCampaignReply) Descriptor() ([]byte, []int) {
	return file_campaignsservicev1_campaigns_campaigns_service_proto_rawDescGZIP(), []int{19}
}

type GetTokensMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetTokensMsg) Reset() {
	*x = GetTokensMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campaignsservicev1_campaigns_campaigns_service_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTokensMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTokensMsg) ProtoMessage() {}

func (x *GetTokensMsg) ProtoReflect() protoreflect.Message {
	mi := &file_campaignsservicev1_campaigns_campaigns_service_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTokensMsg.ProtoReflect.Descriptor instead.
func (*GetTokensMsg) Descriptor() ([]byte, []int) {
	return file_campaignsservicev1_campaigns_campaigns_service_proto_rawDescGZIP(), []int{20}
}

type GetTokensReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tokens []*MultichainToken `protobuf:"bytes,1,rep,name=tokens,proto3" json:"tokens,omitempty"`
}

func (x *GetTokensReply) Reset() {
	*x = GetTokensReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campaignsservicev1_campaigns_campaigns_service_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTokensReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTokensReply) ProtoMessage() {}

func (x *GetTokensReply) ProtoReflect() protoreflect.Message {
	mi := &file_campaignsservicev1_campaigns_campaigns_service_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTokensReply.ProtoReflect.Descriptor instead.
func (*GetTokensReply) Descriptor() ([]byte, []int) {
	return file_campaignsservicev1_campaigns_campaigns_service_proto_rawDescGZIP(), []int{21}
}

func (x *GetTokensReply) GetTokens() []*MultichainToken {
	if x != nil {
		return x.Tokens
	}
	return nil
}

type GetTokenByIdReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token *MultichainToken `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *GetTokenByIdReply) Reset() {
	*x = GetTokenByIdReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campaignsservicev1_campaigns_campaigns_service_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTokenByIdReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTokenByIdReply) ProtoMessage() {}

func (x *GetTokenByIdReply) ProtoReflect() protoreflect.Message {
	mi := &file_campaignsservicev1_campaigns_campaigns_service_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTokenByIdReply.ProtoReflect.Descriptor instead.
func (*GetTokenByIdReply) Descriptor() ([]byte, []int) {
	return file_campaignsservicev1_campaigns_campaigns_service_proto_rawDescGZIP(), []int{22}
}

func (x *GetTokenByIdReply) GetToken() *MultichainToken {
	if x != nil {
		return x.Token
	}
	return nil
}

type GetTokenByIdMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetTokenByIdMsg) Reset() {
	*x = GetTokenByIdMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campaignsservicev1_campaigns_campaigns_service_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTokenByIdMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTokenByIdMsg) ProtoMessage() {}

func (x *GetTokenByIdMsg) ProtoReflect() protoreflect.Message {
	mi := &file_campaignsservicev1_campaigns_campaigns_service_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTokenByIdMsg.ProtoReflect.Descriptor instead.
func (*GetTokenByIdMsg) Descriptor() ([]byte, []int) {
	return file_campaignsservicev1_campaigns_campaigns_service_proto_rawDescGZIP(), []int{23}
}

func (x *GetTokenByIdMsg) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type CreateCampaignMsg_CreateCampaignInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name            string                                                           `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description     string                                                           `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	IsActive        bool                                                             `protobuf:"varint,3,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	StartDate       string                                                           `protobuf:"bytes,4,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate         string                                                           `protobuf:"bytes,5,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	Rewards         *CreateCampaignMsg_CreateCampaignInput_CreateCampaignRewardInput `protobuf:"bytes,6,opt,name=rewards,proto3" json:"rewards,omitempty"`
	Tags            []string                                                         `protobuf:"bytes,7,rep,name=tags,proto3" json:"tags,omitempty"`
	SupportedChains []uint32                                                         `protobuf:"varint,8,rep,packed,name=supported_chains,json=supportedChains,proto3" json:"supported_chains,omitempty"`
	EnrollMessage   string                                                           `protobuf:"bytes,9,opt,name=enroll_message,json=enrollMessage,proto3" json:"enroll_message,omitempty"`
	EnrollmentMode  EnrollmentMode                                                   `protobuf:"varint,10,opt,name=enrollment_mode,json=enrollmentMode,proto3,enum=campaignsservice.v1.EnrollmentMode" json:"enrollment_mode,omitempty"`
	CampaignType    CampaignType                                                     `protobuf:"varint,11,opt,name=campaign_type,json=campaignType,proto3,enum=campaignsservice.v1.CampaignType" json:"campaign_type,omitempty"`
	// Types that are assignable to Metadata:
	//
	//	*CreateCampaignMsg_CreateCampaignInput_GalxeMetadata
	//	*CreateCampaignMsg_CreateCampaignInput_PartnerOffersMetadata
	Metadata isCreateCampaignMsg_CreateCampaignInput_Metadata `protobuf_oneof:"metadata"`
}

func (x *CreateCampaignMsg_CreateCampaignInput) Reset() {
	*x = CreateCampaignMsg_CreateCampaignInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campaignsservicev1_campaigns_campaigns_service_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCampaignMsg_CreateCampaignInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCampaignMsg_CreateCampaignInput) ProtoMessage() {}

func (x *CreateCampaignMsg_CreateCampaignInput) ProtoReflect() protoreflect.Message {
	mi := &file_campaignsservicev1_campaigns_campaigns_service_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCampaignMsg_CreateCampaignInput.ProtoReflect.Descriptor instead.
func (*CreateCampaignMsg_CreateCampaignInput) Descriptor() ([]byte, []int) {
	return file_campaignsservicev1_campaigns_campaigns_service_proto_rawDescGZIP(), []int{2, 0}
}

func (x *CreateCampaignMsg_CreateCampaignInput) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateCampaignMsg_CreateCampaignInput) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateCampaignMsg_CreateCampaignInput) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *CreateCampaignMsg_CreateCampaignInput) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *CreateCampaignMsg_CreateCampaignInput) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

func (x *CreateCampaignMsg_CreateCampaignInput) GetRewards() *CreateCampaignMsg_CreateCampaignInput_CreateCampaignRewardInput {
	if x != nil {
		return x.Rewards
	}
	return nil
}

func (x *CreateCampaignMsg_CreateCampaignInput) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *CreateCampaignMsg_CreateCampaignInput) GetSupportedChains() []uint32 {
	if x != nil {
		return x.SupportedChains
	}
	return nil
}

func (x *CreateCampaignMsg_CreateCampaignInput) GetEnrollMessage() string {
	if x != nil {
		return x.EnrollMessage
	}
	return ""
}

func (x *CreateCampaignMsg_CreateCampaignInput) GetEnrollmentMode() EnrollmentMode {
	if x != nil {
		return x.EnrollmentMode
	}
	return EnrollmentMode_ENROLLMENT_MODE_INVALID
}

func (x *CreateCampaignMsg_CreateCampaignInput) GetCampaignType() CampaignType {
	if x != nil {
		return x.CampaignType
	}
	return CampaignType_CAMPAIGN_TYPE_INVALID
}

func (m *CreateCampaignMsg_CreateCampaignInput) GetMetadata() isCreateCampaignMsg_CreateCampaignInput_Metadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (x *CreateCampaignMsg_CreateCampaignInput) GetGalxeMetadata() *GalxeCampaignMetadata {
	if x, ok := x.GetMetadata().(*CreateCampaignMsg_CreateCampaignInput_GalxeMetadata); ok {
		return x.GalxeMetadata
	}
	return nil
}

func (x *CreateCampaignMsg_CreateCampaignInput) GetPartnerOffersMetadata() *PartnerOffersCampaignMetadata {
	if x, ok := x.GetMetadata().(*CreateCampaignMsg_CreateCampaignInput_PartnerOffersMetadata); ok {
		return x.PartnerOffersMetadata
	}
	return nil
}

type isCreateCampaignMsg_CreateCampaignInput_Metadata interface {
	isCreateCampaignMsg_CreateCampaignInput_Metadata()
}

type CreateCampaignMsg_CreateCampaignInput_GalxeMetadata struct {
	GalxeMetadata *GalxeCampaignMetadata `protobuf:"bytes,12,opt,name=galxe_metadata,json=galxeMetadata,proto3,oneof"`
}

type CreateCampaignMsg_CreateCampaignInput_PartnerOffersMetadata struct {
	PartnerOffersMetadata *PartnerOffersCampaignMetadata `protobuf:"bytes,13,opt,name=partner_offers_metadata,json=partnerOffersMetadata,proto3,oneof"`
}

func (*CreateCampaignMsg_CreateCampaignInput_GalxeMetadata) isCreateCampaignMsg_CreateCampaignInput_Metadata() {
}

func (*CreateCampaignMsg_CreateCampaignInput_PartnerOffersMetadata) isCreateCampaignMsg_CreateCampaignInput_Metadata() {
}

type CreateCampaignMsg_CreateCampaignInput_CreateCampaignRewardInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token   *CreateCampaignMsg_CreateCampaignInput_CreateCampaignRewardInput_CreateCampaignTokenInput `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Type    RewardType                                                                                `protobuf:"varint,2,opt,name=type,proto3,enum=campaignsservice.v1.RewardType" json:"type,omitempty"`
	Amounts []string                                                                                  `protobuf:"bytes,3,rep,name=amounts,proto3" json:"amounts,omitempty"`
}

func (x *CreateCampaignMsg_CreateCampaignInput_CreateCampaignRewardInput) Reset() {
	*x = CreateCampaignMsg_CreateCampaignInput_CreateCampaignRewardInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campaignsservicev1_campaigns_campaigns_service_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCampaignMsg_CreateCampaignInput_CreateCampaignRewardInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCampaignMsg_CreateCampaignInput_CreateCampaignRewardInput) ProtoMessage() {}

func (x *CreateCampaignMsg_CreateCampaignInput_CreateCampaignRewardInput) ProtoReflect() protoreflect.Message {
	mi := &file_campaignsservicev1_campaigns_campaigns_service_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCampaignMsg_CreateCampaignInput_CreateCampaignRewardInput.ProtoReflect.Descriptor instead.
func (*CreateCampaignMsg_CreateCampaignInput_CreateCampaignRewardInput) Descriptor() ([]byte, []int) {
	return file_campaignsservicev1_campaigns_campaigns_service_proto_rawDescGZIP(), []int{2, 0, 0}
}

func (x *CreateCampaignMsg_CreateCampaignInput_CreateCampaignRewardInput) GetToken() *CreateCampaignMsg_CreateCampaignInput_CreateCampaignRewardInput_CreateCampaignTokenInput {
	if x != nil {
		return x.Token
	}
	return nil
}

func (x *CreateCampaignMsg_CreateCampaignInput_CreateCampaignRewardInput) GetType() RewardType {
	if x != nil {
		return x.Type
	}
	return RewardType_REWARD_TYPE_INVALID
}

func (x *CreateCampaignMsg_CreateCampaignInput_CreateCampaignRewardInput) GetAmounts() []string {
	if x != nil {
		return x.Amounts
	}
	return nil
}

type CreateCampaignMsg_CreateCampaignInput_CreateCampaignRewardInput_CreateCampaignTokenInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string           `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Create *MultichainToken `protobuf:"bytes,2,opt,name=create,proto3" json:"create,omitempty"`
}

func (x *CreateCampaignMsg_CreateCampaignInput_CreateCampaignRewardInput_CreateCampaignTokenInput) Reset() {
	*x = CreateCampaignMsg_CreateCampaignInput_CreateCampaignRewardInput_CreateCampaignTokenInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_campaignsservicev1_campaigns_campaigns_service_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCampaignMsg_CreateCampaignInput_CreateCampaignRewardInput_CreateCampaignTokenInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCampaignMsg_CreateCampaignInput_CreateCampaignRewardInput_CreateCampaignTokenInput) ProtoMessage() {
}

func (x *CreateCampaignMsg_CreateCampaignInput_CreateCampaignRewardInput_CreateCampaignTokenInput) ProtoReflect() protoreflect.Message {
	mi := &file_campaignsservicev1_campaigns_campaigns_service_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCampaignMsg_CreateCampaignInput_CreateCampaignRewardInput_CreateCampaignTokenInput.ProtoReflect.Descriptor instead.
func (*CreateCampaignMsg_CreateCampaignInput_CreateCampaignRewardInput_CreateCampaignTokenInput) Descriptor() ([]byte, []int) {
	return file_campaignsservicev1_campaigns_campaigns_service_proto_rawDescGZIP(), []int{2, 0, 0, 0}
}

func (x *CreateCampaignMsg_CreateCampaignInput_CreateCampaignRewardInput_CreateCampaignTokenInput) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreateCampaignMsg_CreateCampaignInput_CreateCampaignRewardInput_CreateCampaignTokenInput) GetCreate() *MultichainToken {
	if x != nil {
		return x.Create
	}
	return nil
}

var File_campaignsservicev1_campaigns_campaigns_service_proto protoreflect.FileDescriptor

var file_campaignsservicev1_campaigns_campaigns_service_proto_rawDesc = []byte{
	0x0a, 0x34, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x73, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x76, 0x31, 0x2f, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x73, 0x2f, 0x63,
	0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e,
	0x73, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70,
	0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x55, 0x0a, 0x0f, 0x47, 0x65, 0x74,
	0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x73, 0x4d, 0x73, 0x67, 0x12, 0x42, 0x0a, 0x07,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x73, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x73,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73,
	0x22, 0x24, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x42,
	0x79, 0x49, 0x64, 0x4d, 0x73, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xa8, 0x09, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x4d, 0x73, 0x67, 0x12, 0x56, 0x0a, 0x08,
	0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a,
	0x2e, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x73, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6d, 0x70, 0x61,
	0x69, 0x67, 0x6e, 0x4d, 0x73, 0x67, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6d,
	0x70, 0x61, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x08, 0x63, 0x61, 0x6d, 0x70,
	0x61, 0x69, 0x67, 0x6e, 0x1a, 0xba, 0x08, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43,
	0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x6e, 0x0a, 0x07, 0x72, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x54, 0x2e, 0x63, 0x61, 0x6d,
	0x70, 0x61, 0x69, 0x67, 0x6e, 0x73, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x4d,
	0x73, 0x67, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67,
	0x6e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6d,
	0x70, 0x61, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x52, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67,
	0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x29, 0x0a,
	0x10, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0f, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74,
	0x65, 0x64, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x6e, 0x72, 0x6f,
	0x6c, 0x6c, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x65, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x4c, 0x0a, 0x0f, 0x65, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x6f,
	0x64, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x61,
	0x69, 0x67, 0x6e, 0x73, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45,
	0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x0e, 0x65,
	0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x46, 0x0a,
	0x0d, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x73,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x6d, 0x70, 0x61,
	0x69, 0x67, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x53, 0x0a, 0x0e, 0x67, 0x61, 0x6c, 0x78, 0x65, 0x5f, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e,
	0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x73, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x61, 0x6c, 0x78, 0x65, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67,
	0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x0d, 0x67, 0x61, 0x6c,
	0x78, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x6c, 0x0a, 0x17, 0x70, 0x61,
	0x72, 0x74, 0x6e, 0x65, 0x72, 0x5f, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x73, 0x5f, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x63, 0x61,
	0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x73, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x73, 0x43,
	0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x48,
	0x00, 0x52, 0x15, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x73,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x1a, 0xda, 0x02, 0x0a, 0x19, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x83, 0x01, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x6d, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67,
	0x6e, 0x73, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x4d, 0x73, 0x67, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67,
	0x6e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x33, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x63, 0x61, 0x6d,
	0x70, 0x61, 0x69, 0x67, 0x6e, 0x73, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x07, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x1a, 0x68, 0x0a, 0x18, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3c, 0x0a, 0x06, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69,
	0x67, 0x6e, 0x73, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x75,
	0x6c, 0x74, 0x69, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x06, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x50, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6d, 0x70, 0x61,
	0x69, 0x67, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x39, 0x0a, 0x08, 0x63, 0x61, 0x6d, 0x70,
	0x61, 0x69, 0x67, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x61, 0x6d,
	0x70, 0x61, 0x69, 0x67, 0x6e, 0x73, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x52, 0x08, 0x63, 0x61, 0x6d, 0x70, 0x61,
	0x69, 0x67, 0x6e, 0x22, 0xf5, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x43, 0x61, 0x6d, 0x70, 0x61,
	0x69, 0x67, 0x6e, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x3b, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x63, 0x61,
	0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x73, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x39, 0x0a, 0x09, 0x66, 0x72, 0x6f, 0x6d,
	0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x08, 0x66, 0x72, 0x6f, 0x6d, 0x44,
	0x61, 0x74, 0x65, 0x12, 0x35, 0x0a, 0x07, 0x74, 0x6f, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x06, 0x74, 0x6f, 0x44, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61,
	0x67, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x1b,
	0x0a, 0x09, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0d, 0x52, 0x08, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x73, 0x22, 0x50, 0x0a, 0x11, 0x47,
	0x65, 0x74, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x3b, 0x0a, 0x09, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x73, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69,
	0x67, 0x6e, 0x52, 0x09, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x73, 0x22, 0x51, 0x0a,
	0x14, 0x47, 0x65, 0x74, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x42, 0x79, 0x49, 0x64,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x39, 0x0a, 0x08, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69,
	0x67, 0x6e, 0x73, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61,
	0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x52, 0x08, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e,
	0x22, 0x36, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1a, 0x0a, 0x08,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x22, 0x39, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x43,
	0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0x3c, 0x0a, 0x15, 0x47, 0x61, 0x6c, 0x78, 0x65, 0x43, 0x61, 0x6d, 0x70,
	0x61, 0x69, 0x67, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x23, 0x0a, 0x0d,
	0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x49,
	0x64, 0x22, 0x1f, 0x0a, 0x1d, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x4f, 0x66, 0x66, 0x65,
	0x72, 0x73, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x57, 0x0a, 0x0b, 0x45, 0x6c, 0x69, 0x67, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x65, 0x6c, 0x69, 0x67, 0x69, 0x62, 0x6c, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x45, 0x6c, 0x69, 0x67, 0x69, 0x62,
	0x6c, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x65, 0x64, 0x5f, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x65, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xa5, 0x01, 0x0a, 0x0b,
	0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x65, 0x61, 0x72, 0x6c, 0x79, 0x5f, 0x65, 0x6e,
	0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f,
	0x65, 0x61, 0x72, 0x6c, 0x79, 0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x42, 0x0a, 0x0b, 0x65, 0x6c, 0x69, 0x67, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x73,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6c, 0x69, 0x67, 0x69,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x0b, 0x65, 0x6c, 0x69, 0x67, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x22, 0xf3, 0x06, 0x0a, 0x08, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x29, 0x0a, 0x10, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0f, 0x73, 0x75, 0x70, 0x70,
	0x6f, 0x72, 0x74, 0x65, 0x64, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x3b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x23, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x73, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x36, 0x0a, 0x07, 0x72, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x61, 0x6d, 0x70,
	0x61, 0x69, 0x67, 0x6e, 0x73, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x52, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73,
	0x12, 0x1a, 0x0a, 0x08, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x09, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x08, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x61, 0x67, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73,
	0x12, 0x25, 0x0a, 0x0e, 0x65, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x6e, 0x72, 0x6f, 0x6c, 0x6c,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x4c, 0x0a, 0x0f, 0x65, 0x6e, 0x72, 0x6f, 0x6c,
	0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x23, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x73, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e,
	0x74, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x0e, 0x65, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e,
	0x74, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x46, 0x0a, 0x0d, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67,
	0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x63,
	0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x73, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x0c, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x44, 0x0a,
	0x0c, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x18, 0x0f, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x73, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63,
	0x69, 0x70, 0x61, 0x6e, 0x74, 0x52, 0x0c, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61,
	0x6e, 0x74, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x53, 0x0a, 0x0e, 0x67, 0x61, 0x6c, 0x78, 0x65, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x63, 0x61, 0x6d, 0x70,
	0x61, 0x69, 0x67, 0x6e, 0x73, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x61, 0x6c, 0x78, 0x65, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x0d, 0x67, 0x61, 0x6c, 0x78, 0x65, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x6c, 0x0a, 0x17, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65,
	0x72, 0x5f, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69,
	0x67, 0x6e, 0x73, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61,
	0x72, 0x74, 0x6e, 0x65, 0x72, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x73, 0x43, 0x61, 0x6d, 0x70, 0x61,
	0x69, 0x67, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x15, 0x70,
	0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x73, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x42, 0x13, 0x0a, 0x11, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e,
	0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x94, 0x01, 0x0a, 0x07, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x73, 0x12, 0x3a, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x73,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x75, 0x6c, 0x74, 0x69,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x07, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x33, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x63, 0x61, 0x6d, 0x70,
	0x61, 0x69, 0x67, 0x6e, 0x73, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x22, 0x9e, 0x01, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6d, 0x70, 0x61,
	0x69, 0x67, 0x6e, 0x4d, 0x73, 0x67, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69,
	0x67, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x61, 0x6d,
	0x70, 0x61, 0x69, 0x67, 0x6e, 0x49, 0x64, 0x12, 0x3b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69,
	0x67, 0x6e, 0x73, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61,
	0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x2b, 0x0a, 0x11, 0x65, 0x6c, 0x69, 0x67, 0x69, 0x62, 0x6c, 0x65,
	0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x10, 0x65, 0x6c, 0x69, 0x67, 0x69, 0x62, 0x6c, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x73, 0x22, 0x50, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6d, 0x70, 0x61,
	0x69, 0x67, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x39, 0x0a, 0x08, 0x63, 0x61, 0x6d, 0x70,
	0x61, 0x69, 0x67, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x61, 0x6d,
	0x70, 0x61, 0x69, 0x67, 0x6e, 0x73, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x52, 0x08, 0x63, 0x61, 0x6d, 0x70, 0x61,
	0x69, 0x67, 0x6e, 0x22, 0x9b, 0x02, 0x0a, 0x0f, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64,
	0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64,
	0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f,
	0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12,
	0x6a, 0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x63, 0x61,
	0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x73, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x11, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x1a, 0x44, 0x0a, 0x16, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x7d, 0x0a, 0x13, 0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x49, 0x6e, 0x43, 0x61, 0x6d,
	0x70, 0x61, 0x69, 0x67, 0x6e, 0x4d, 0x73, 0x67, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x6d, 0x70,
	0x61, 0x69, 0x67, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63,
	0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x22, 0x17, 0x0a, 0x15, 0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x49, 0x6e, 0x43, 0x61, 0x6d, 0x70,
	0x61, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x0e, 0x0a, 0x0c, 0x47, 0x65, 0x74,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x4d, 0x73, 0x67, 0x22, 0x4e, 0x0a, 0x0e, 0x47, 0x65, 0x74,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x3c, 0x0a, 0x06, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63, 0x61,
	0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x73, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x52, 0x06, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x22, 0x4f, 0x0a, 0x11, 0x47, 0x65, 0x74,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x3a,
	0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x73, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x21, 0x0a, 0x0f, 0x47, 0x65,
	0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x79, 0x49, 0x64, 0x4d, 0x73, 0x67, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x2a, 0xc1, 0x01,
	0x0a, 0x0e, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1b, 0x0a, 0x17, 0x43, 0x41, 0x4d, 0x50, 0x41, 0x49, 0x47, 0x4e, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x00, 0x12, 0x1b, 0x0a,
	0x17, 0x43, 0x41, 0x4d, 0x50, 0x41, 0x49, 0x47, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x1c, 0x0a, 0x18, 0x43, 0x41,
	0x4d, 0x50, 0x41, 0x49, 0x47, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x57, 0x41,
	0x49, 0x54, 0x4c, 0x49, 0x53, 0x54, 0x10, 0x02, 0x12, 0x1a, 0x0a, 0x16, 0x43, 0x41, 0x4d, 0x50,
	0x41, 0x49, 0x47, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x41, 0x43, 0x54, 0x49,
	0x56, 0x45, 0x10, 0x03, 0x12, 0x1c, 0x0a, 0x18, 0x43, 0x41, 0x4d, 0x50, 0x41, 0x49, 0x47, 0x4e,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x46, 0x49, 0x4e, 0x49, 0x53, 0x48, 0x45, 0x44,
	0x10, 0x04, 0x12, 0x1d, 0x0a, 0x19, 0x43, 0x41, 0x4d, 0x50, 0x41, 0x49, 0x47, 0x4e, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x4c, 0x45, 0x44, 0x10,
	0x05, 0x2a, 0x68, 0x0a, 0x0e, 0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x4d,
	0x6f, 0x64, 0x65, 0x12, 0x1b, 0x0a, 0x17, 0x45, 0x4e, 0x52, 0x4f, 0x4c, 0x4c, 0x4d, 0x45, 0x4e,
	0x54, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x00,
	0x12, 0x1d, 0x0a, 0x19, 0x49, 0x4e, 0x53, 0x54, 0x41, 0x4e, 0x43, 0x45, 0x5f, 0x55, 0x4e, 0x4c,
	0x49, 0x4d, 0x49, 0x54, 0x45, 0x44, 0x5f, 0x45, 0x4e, 0x52, 0x4f, 0x4c, 0x4c, 0x10, 0x01, 0x12,
	0x1a, 0x0a, 0x16, 0x49, 0x4e, 0x53, 0x54, 0x41, 0x4e, 0x43, 0x45, 0x5f, 0x53, 0x49, 0x4e, 0x47,
	0x4c, 0x45, 0x5f, 0x45, 0x4e, 0x52, 0x4f, 0x4c, 0x4c, 0x10, 0x02, 0x2a, 0x64, 0x0a, 0x0c, 0x43,
	0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x15, 0x43,
	0x41, 0x4d, 0x50, 0x41, 0x49, 0x47, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x4e, 0x56,
	0x41, 0x4c, 0x49, 0x44, 0x10, 0x00, 0x12, 0x20, 0x0a, 0x1c, 0x43, 0x41, 0x4d, 0x50, 0x41, 0x49,
	0x47, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x41, 0x52, 0x54, 0x4e, 0x45, 0x52, 0x5f,
	0x4f, 0x46, 0x46, 0x45, 0x52, 0x53, 0x10, 0x01, 0x12, 0x17, 0x0a, 0x13, 0x43, 0x41, 0x4d, 0x50,
	0x41, 0x49, 0x47, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x47, 0x41, 0x4c, 0x58, 0x45, 0x10,
	0x02, 0x2a, 0x6e, 0x0a, 0x0a, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x17, 0x0a, 0x13, 0x52, 0x45, 0x57, 0x41, 0x52, 0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49,
	0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x52, 0x45, 0x57, 0x41,
	0x52, 0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x4f, 0x44, 0x49, 0x55, 0x4d, 0x10, 0x01,
	0x12, 0x16, 0x0a, 0x12, 0x52, 0x45, 0x57, 0x41, 0x52, 0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x53, 0x49, 0x4e, 0x47, 0x4c, 0x45, 0x10, 0x02, 0x12, 0x17, 0x0a, 0x13, 0x52, 0x45, 0x57, 0x41,
	0x52, 0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x59, 0x4e, 0x41, 0x4d, 0x49, 0x43, 0x10,
	0x03, 0x32, 0xf3, 0x09, 0x0a, 0x10, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x73, 0x53,
	0x65, 0x72, 0x69, 0x76, 0x63, 0x65, 0x12, 0x77, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x43, 0x61, 0x6d,
	0x70, 0x61, 0x69, 0x67, 0x6e, 0x73, 0x12, 0x24, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67,
	0x6e, 0x73, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x73, 0x4d, 0x73, 0x67, 0x1a, 0x26, 0x2e, 0x63,
	0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x73, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x73, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x12, 0x11, 0x2f, 0x76,
	0x31, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x73, 0x12,
	0x85, 0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x42,
	0x79, 0x49, 0x64, 0x12, 0x27, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x73, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x6d,
	0x70, 0x61, 0x69, 0x67, 0x6e, 0x42, 0x79, 0x49, 0x64, 0x4d, 0x73, 0x67, 0x1a, 0x29, 0x2e, 0x63,
	0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x73, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x42, 0x79,
	0x49, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x12,
	0x16, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67,
	0x6e, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x96, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x43,
	0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12,
	0x27, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x73, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67,
	0x6e, 0x42, 0x79, 0x49, 0x64, 0x4d, 0x73, 0x67, 0x1a, 0x2d, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x61,
	0x69, 0x67, 0x6e, 0x73, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x12,
	0x1f, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67,
	0x6e, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73,
	0x12, 0xa6, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e,
	0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x27, 0x2e,
	0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x73, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x42,
	0x79, 0x49, 0x64, 0x4d, 0x73, 0x67, 0x1a, 0x32, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67,
	0x6e, 0x73, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x2d, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x27, 0x12, 0x25, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x61, 0x6d, 0x70,
	0x61, 0x69, 0x67, 0x6e, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x65, 0x6e, 0x72, 0x6f, 0x6c,
	0x6c, 0x2d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x9b, 0x01, 0x0a, 0x10, 0x45, 0x6e,
	0x72, 0x6f, 0x6c, 0x6c, 0x49, 0x6e, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x12, 0x28,
	0x2e, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x73, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x49, 0x6e, 0x43, 0x61, 0x6d,
	0x70, 0x61, 0x69, 0x67, 0x6e, 0x4d, 0x73, 0x67, 0x1a, 0x2a, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x61,
	0x69, 0x67, 0x6e, 0x73, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45,
	0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x49, 0x6e, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x31, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2b, 0x3a, 0x01, 0x2a, 0x22,
	0x26, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67,
	0x6e, 0x73, 0x2f, 0x7b, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x5f, 0x69, 0x64, 0x7d,
	0x2f, 0x65, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x12, 0x82, 0x01, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x12, 0x26, 0x2e, 0x63, 0x61, 0x6d,
	0x70, 0x61, 0x69, 0x67, 0x6e, 0x73, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x4d,
	0x73, 0x67, 0x1a, 0x28, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x73, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43,
	0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1e, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x18, 0x3a, 0x01, 0x2a, 0x22, 0x13, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x2f, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x73, 0x12, 0x90, 0x01, 0x0a,
	0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x12,
	0x26, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x73, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6d, 0x70,
	0x61, 0x69, 0x67, 0x6e, 0x4d, 0x73, 0x67, 0x1a, 0x28, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69,
	0x67, 0x6e, 0x73, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x2c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x26, 0x3a, 0x01, 0x2a, 0x32, 0x21, 0x2f, 0x76,
	0x31, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e,
	0x73, 0x2f, 0x7b, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x5f, 0x69, 0x64, 0x7d, 0x12,
	0x6b, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x12, 0x21, 0x2e, 0x63,
	0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x73, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x4d, 0x73, 0x67, 0x1a,
	0x23, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x73, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x16, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x10, 0x12, 0x0e, 0x2f, 0x76,
	0x31, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x12, 0x79, 0x0a, 0x0c,
	0x47, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x79, 0x49, 0x64, 0x12, 0x24, 0x2e, 0x63,
	0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x73, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x79, 0x49, 0x64, 0x4d,
	0x73, 0x67, 0x1a, 0x26, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x73, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x15, 0x12, 0x13, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x42, 0x66, 0x5a, 0x64, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2d, 0x77, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x2f, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x73, 0x2d, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x73, 0x72, 0x63, 0x2f,
	0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x73, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x76, 0x31, 0x2f, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x73, 0x3b, 0x63, 0x61, 0x6d,
	0x70, 0x61, 0x69, 0x67, 0x6e, 0x73, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x76, 0x31, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_campaignsservicev1_campaigns_campaigns_service_proto_rawDescOnce sync.Once
	file_campaignsservicev1_campaigns_campaigns_service_proto_rawDescData = file_campaignsservicev1_campaigns_campaigns_service_proto_rawDesc
)

func file_campaignsservicev1_campaigns_campaigns_service_proto_rawDescGZIP() []byte {
	file_campaignsservicev1_campaigns_campaigns_service_proto_rawDescOnce.Do(func() {
		file_campaignsservicev1_campaigns_campaigns_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_campaignsservicev1_campaigns_campaigns_service_proto_rawDescData)
	})
	return file_campaignsservicev1_campaigns_campaigns_service_proto_rawDescData
}

var file_campaignsservicev1_campaigns_campaigns_service_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_campaignsservicev1_campaigns_campaigns_service_proto_msgTypes = make([]protoimpl.MessageInfo, 28)
var file_campaignsservicev1_campaigns_campaigns_service_proto_goTypes = []interface{}{
	(CampaignStatus)(0),                           // 0: campaignsservice.v1.CampaignStatus
	(EnrollmentMode)(0),                           // 1: campaignsservice.v1.EnrollmentMode
	(CampaignType)(0),                             // 2: campaignsservice.v1.CampaignType
	(RewardType)(0),                               // 3: campaignsservice.v1.RewardType
	(*GetCampaignsMsg)(nil),                       // 4: campaignsservice.v1.GetCampaignsMsg
	(*GetCampaignByIdMsg)(nil),                    // 5: campaignsservice.v1.GetCampaignByIdMsg
	(*CreateCampaignMsg)(nil),                     // 6: campaignsservice.v1.CreateCampaignMsg
	(*CreateCampaignReply)(nil),                   // 7: campaignsservice.v1.CreateCampaignReply
	(*GetCampaignsFilters)(nil),                   // 8: campaignsservice.v1.GetCampaignsFilters
	(*GetCampaignsReply)(nil),                     // 9: campaignsservice.v1.GetCampaignsReply
	(*GetCampaignByIdReply)(nil),                  // 10: campaignsservice.v1.GetCampaignByIdReply
	(*GetCampaignAccountsReply)(nil),              // 11: campaignsservice.v1.GetCampaignAccountsReply
	(*GetCampaignEnrollMessageReply)(nil),         // 12: campaignsservice.v1.GetCampaignEnrollMessageReply
	(*GalxeCampaignMetadata)(nil),                 // 13: campaignsservice.v1.GalxeCampaignMetadata
	(*PartnerOffersCampaignMetadata)(nil),         // 14: campaignsservice.v1.PartnerOffersCampaignMetadata
	(*Eligibility)(nil),                           // 15: campaignsservice.v1.Eligibility
	(*Participant)(nil),                           // 16: campaignsservice.v1.Participant
	(*Campaign)(nil),                              // 17: campaignsservice.v1.Campaign
	(*Rewards)(nil),                               // 18: campaignsservice.v1.Rewards
	(*UpdateCampaignMsg)(nil),                     // 19: campaignsservice.v1.UpdateCampaignMsg
	(*UpdateCampaignReply)(nil),                   // 20: campaignsservice.v1.UpdateCampaignReply
	(*MultichainToken)(nil),                       // 21: campaignsservice.v1.MultichainToken
	(*EnrollInCampaignMsg)(nil),                   // 22: campaignsservice.v1.EnrollInCampaignMsg
	(*EnrollInCampaignReply)(nil),                 // 23: campaignsservice.v1.EnrollInCampaignReply
	(*GetTokensMsg)(nil),                          // 24: campaignsservice.v1.GetTokensMsg
	(*GetTokensReply)(nil),                        // 25: campaignsservice.v1.GetTokensReply
	(*GetTokenByIdReply)(nil),                     // 26: campaignsservice.v1.GetTokenByIdReply
	(*GetTokenByIdMsg)(nil),                       // 27: campaignsservice.v1.GetTokenByIdMsg
	(*CreateCampaignMsg_CreateCampaignInput)(nil), // 28: campaignsservice.v1.CreateCampaignMsg.CreateCampaignInput
	(*CreateCampaignMsg_CreateCampaignInput_CreateCampaignRewardInput)(nil),                          // 29: campaignsservice.v1.CreateCampaignMsg.CreateCampaignInput.CreateCampaignRewardInput
	(*CreateCampaignMsg_CreateCampaignInput_CreateCampaignRewardInput_CreateCampaignTokenInput)(nil), // 30: campaignsservice.v1.CreateCampaignMsg.CreateCampaignInput.CreateCampaignRewardInput.CreateCampaignTokenInput
	nil,                            // 31: campaignsservice.v1.MultichainToken.ContractAddressesEntry
	(*wrapperspb.StringValue)(nil), // 32: google.protobuf.StringValue
}
var file_campaignsservicev1_campaigns_campaigns_service_proto_depIdxs = []int32{
	8,  // 0: campaignsservice.v1.GetCampaignsMsg.filters:type_name -> campaignsservice.v1.GetCampaignsFilters
	28, // 1: campaignsservice.v1.CreateCampaignMsg.campaign:type_name -> campaignsservice.v1.CreateCampaignMsg.CreateCampaignInput
	17, // 2: campaignsservice.v1.CreateCampaignReply.campaign:type_name -> campaignsservice.v1.Campaign
	0,  // 3: campaignsservice.v1.GetCampaignsFilters.status:type_name -> campaignsservice.v1.CampaignStatus
	32, // 4: campaignsservice.v1.GetCampaignsFilters.from_date:type_name -> google.protobuf.StringValue
	32, // 5: campaignsservice.v1.GetCampaignsFilters.to_date:type_name -> google.protobuf.StringValue
	17, // 6: campaignsservice.v1.GetCampaignsReply.campaigns:type_name -> campaignsservice.v1.Campaign
	17, // 7: campaignsservice.v1.GetCampaignByIdReply.campaign:type_name -> campaignsservice.v1.Campaign
	15, // 8: campaignsservice.v1.Participant.eligibility:type_name -> campaignsservice.v1.Eligibility
	0,  // 9: campaignsservice.v1.Campaign.status:type_name -> campaignsservice.v1.CampaignStatus
	18, // 10: campaignsservice.v1.Campaign.rewards:type_name -> campaignsservice.v1.Rewards
	1,  // 11: campaignsservice.v1.Campaign.enrollment_mode:type_name -> campaignsservice.v1.EnrollmentMode
	2,  // 12: campaignsservice.v1.Campaign.campaign_type:type_name -> campaignsservice.v1.CampaignType
	16, // 13: campaignsservice.v1.Campaign.participants:type_name -> campaignsservice.v1.Participant
	13, // 14: campaignsservice.v1.Campaign.galxe_metadata:type_name -> campaignsservice.v1.GalxeCampaignMetadata
	14, // 15: campaignsservice.v1.Campaign.partner_offers_metadata:type_name -> campaignsservice.v1.PartnerOffersCampaignMetadata
	21, // 16: campaignsservice.v1.Rewards.token:type_name -> campaignsservice.v1.MultichainToken
	3,  // 17: campaignsservice.v1.Rewards.type:type_name -> campaignsservice.v1.RewardType
	0,  // 18: campaignsservice.v1.UpdateCampaignMsg.status:type_name -> campaignsservice.v1.CampaignStatus
	17, // 19: campaignsservice.v1.UpdateCampaignReply.campaign:type_name -> campaignsservice.v1.Campaign
	31, // 20: campaignsservice.v1.MultichainToken.contract_addresses:type_name -> campaignsservice.v1.MultichainToken.ContractAddressesEntry
	21, // 21: campaignsservice.v1.GetTokensReply.tokens:type_name -> campaignsservice.v1.MultichainToken
	21, // 22: campaignsservice.v1.GetTokenByIdReply.token:type_name -> campaignsservice.v1.MultichainToken
	29, // 23: campaignsservice.v1.CreateCampaignMsg.CreateCampaignInput.rewards:type_name -> campaignsservice.v1.CreateCampaignMsg.CreateCampaignInput.CreateCampaignRewardInput
	1,  // 24: campaignsservice.v1.CreateCampaignMsg.CreateCampaignInput.enrollment_mode:type_name -> campaignsservice.v1.EnrollmentMode
	2,  // 25: campaignsservice.v1.CreateCampaignMsg.CreateCampaignInput.campaign_type:type_name -> campaignsservice.v1.CampaignType
	13, // 26: campaignsservice.v1.CreateCampaignMsg.CreateCampaignInput.galxe_metadata:type_name -> campaignsservice.v1.GalxeCampaignMetadata
	14, // 27: campaignsservice.v1.CreateCampaignMsg.CreateCampaignInput.partner_offers_metadata:type_name -> campaignsservice.v1.PartnerOffersCampaignMetadata
	30, // 28: campaignsservice.v1.CreateCampaignMsg.CreateCampaignInput.CreateCampaignRewardInput.token:type_name -> campaignsservice.v1.CreateCampaignMsg.CreateCampaignInput.CreateCampaignRewardInput.CreateCampaignTokenInput
	3,  // 29: campaignsservice.v1.CreateCampaignMsg.CreateCampaignInput.CreateCampaignRewardInput.type:type_name -> campaignsservice.v1.RewardType
	21, // 30: campaignsservice.v1.CreateCampaignMsg.CreateCampaignInput.CreateCampaignRewardInput.CreateCampaignTokenInput.create:type_name -> campaignsservice.v1.MultichainToken
	4,  // 31: campaignsservice.v1.CampaignsSerivce.GetCampaigns:input_type -> campaignsservice.v1.GetCampaignsMsg
	5,  // 32: campaignsservice.v1.CampaignsSerivce.GetCampaignById:input_type -> campaignsservice.v1.GetCampaignByIdMsg
	5,  // 33: campaignsservice.v1.CampaignsSerivce.GetCampaignAccounts:input_type -> campaignsservice.v1.GetCampaignByIdMsg
	5,  // 34: campaignsservice.v1.CampaignsSerivce.GetCampaignEnrollMessage:input_type -> campaignsservice.v1.GetCampaignByIdMsg
	22, // 35: campaignsservice.v1.CampaignsSerivce.EnrollInCampaign:input_type -> campaignsservice.v1.EnrollInCampaignMsg
	6,  // 36: campaignsservice.v1.CampaignsSerivce.CreateCampaign:input_type -> campaignsservice.v1.CreateCampaignMsg
	19, // 37: campaignsservice.v1.CampaignsSerivce.UpdateCampaign:input_type -> campaignsservice.v1.UpdateCampaignMsg
	24, // 38: campaignsservice.v1.CampaignsSerivce.GetTokens:input_type -> campaignsservice.v1.GetTokensMsg
	27, // 39: campaignsservice.v1.CampaignsSerivce.GetTokenById:input_type -> campaignsservice.v1.GetTokenByIdMsg
	9,  // 40: campaignsservice.v1.CampaignsSerivce.GetCampaigns:output_type -> campaignsservice.v1.GetCampaignsReply
	10, // 41: campaignsservice.v1.CampaignsSerivce.GetCampaignById:output_type -> campaignsservice.v1.GetCampaignByIdReply
	11, // 42: campaignsservice.v1.CampaignsSerivce.GetCampaignAccounts:output_type -> campaignsservice.v1.GetCampaignAccountsReply
	12, // 43: campaignsservice.v1.CampaignsSerivce.GetCampaignEnrollMessage:output_type -> campaignsservice.v1.GetCampaignEnrollMessageReply
	23, // 44: campaignsservice.v1.CampaignsSerivce.EnrollInCampaign:output_type -> campaignsservice.v1.EnrollInCampaignReply
	7,  // 45: campaignsservice.v1.CampaignsSerivce.CreateCampaign:output_type -> campaignsservice.v1.CreateCampaignReply
	20, // 46: campaignsservice.v1.CampaignsSerivce.UpdateCampaign:output_type -> campaignsservice.v1.UpdateCampaignReply
	25, // 47: campaignsservice.v1.CampaignsSerivce.GetTokens:output_type -> campaignsservice.v1.GetTokensReply
	26, // 48: campaignsservice.v1.CampaignsSerivce.GetTokenById:output_type -> campaignsservice.v1.GetTokenByIdReply
	40, // [40:49] is the sub-list for method output_type
	31, // [31:40] is the sub-list for method input_type
	31, // [31:31] is the sub-list for extension type_name
	31, // [31:31] is the sub-list for extension extendee
	0,  // [0:31] is the sub-list for field type_name
}

func init() { file_campaignsservicev1_campaigns_campaigns_service_proto_init() }
func file_campaignsservicev1_campaigns_campaigns_service_proto_init() {
	if File_campaignsservicev1_campaigns_campaigns_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_campaignsservicev1_campaigns_campaigns_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCampaignsMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campaignsservicev1_campaigns_campaigns_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCampaignByIdMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campaignsservicev1_campaigns_campaigns_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCampaignMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campaignsservicev1_campaigns_campaigns_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCampaignReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campaignsservicev1_campaigns_campaigns_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCampaignsFilters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campaignsservicev1_campaigns_campaigns_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCampaignsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campaignsservicev1_campaigns_campaigns_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCampaignByIdReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campaignsservicev1_campaigns_campaigns_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCampaignAccountsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campaignsservicev1_campaigns_campaigns_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCampaignEnrollMessageReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campaignsservicev1_campaigns_campaigns_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GalxeCampaignMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campaignsservicev1_campaigns_campaigns_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PartnerOffersCampaignMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campaignsservicev1_campaigns_campaigns_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Eligibility); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campaignsservicev1_campaigns_campaigns_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Participant); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campaignsservicev1_campaigns_campaigns_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Campaign); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campaignsservicev1_campaigns_campaigns_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Rewards); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campaignsservicev1_campaigns_campaigns_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCampaignMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campaignsservicev1_campaigns_campaigns_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCampaignReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campaignsservicev1_campaigns_campaigns_service_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MultichainToken); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campaignsservicev1_campaigns_campaigns_service_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnrollInCampaignMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campaignsservicev1_campaigns_campaigns_service_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnrollInCampaignReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campaignsservicev1_campaigns_campaigns_service_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTokensMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campaignsservicev1_campaigns_campaigns_service_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTokensReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campaignsservicev1_campaigns_campaigns_service_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTokenByIdReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campaignsservicev1_campaigns_campaigns_service_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTokenByIdMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campaignsservicev1_campaigns_campaigns_service_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCampaignMsg_CreateCampaignInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campaignsservicev1_campaigns_campaigns_service_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCampaignMsg_CreateCampaignInput_CreateCampaignRewardInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_campaignsservicev1_campaigns_campaigns_service_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCampaignMsg_CreateCampaignInput_CreateCampaignRewardInput_CreateCampaignTokenInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_campaignsservicev1_campaigns_campaigns_service_proto_msgTypes[13].OneofWrappers = []interface{}{
		(*Campaign_GalxeMetadata)(nil),
		(*Campaign_PartnerOffersMetadata)(nil),
	}
	file_campaignsservicev1_campaigns_campaigns_service_proto_msgTypes[24].OneofWrappers = []interface{}{
		(*CreateCampaignMsg_CreateCampaignInput_GalxeMetadata)(nil),
		(*CreateCampaignMsg_CreateCampaignInput_PartnerOffersMetadata)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_campaignsservicev1_campaigns_campaigns_service_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   28,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_campaignsservicev1_campaigns_campaigns_service_proto_goTypes,
		DependencyIndexes: file_campaignsservicev1_campaigns_campaigns_service_proto_depIdxs,
		EnumInfos:         file_campaignsservicev1_campaigns_campaigns_service_proto_enumTypes,
		MessageInfos:      file_campaignsservicev1_campaigns_campaigns_service_proto_msgTypes,
	}.Build()
	File_campaignsservicev1_campaigns_campaigns_service_proto = out.File
	file_campaignsservicev1_campaigns_campaigns_service_proto_rawDesc = nil
	file_campaignsservicev1_campaigns_campaigns_service_proto_goTypes = nil
	file_campaignsservicev1_campaigns_campaigns_service_proto_depIdxs = nil
}
