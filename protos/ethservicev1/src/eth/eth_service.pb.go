// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.12.3
// source: eth/eth_service.proto

package ethservicev1service

import (
	context "context"
	reflect "reflect"
	sync "sync"

	src "github.com/block-wallet/golang-service-template/protos/ethservicev1/src"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// Requesting events by pair.
type GetEventsMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pair string `protobuf:"bytes,1,opt,name=pair,proto3" json:"pair,omitempty"`
}

func (x *GetEventsMsg) Reset() {
	*x = GetEventsMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eth_eth_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEventsMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEventsMsg) ProtoMessage() {}

func (x *GetEventsMsg) ProtoReflect() protoreflect.Message {
	mi := &file_eth_eth_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEventsMsg.ProtoReflect.Descriptor instead.
func (*GetEventsMsg) Descriptor() ([]byte, []int) {
	return file_eth_eth_service_proto_rawDescGZIP(), []int{0}
}

func (x *GetEventsMsg) GetPair() string {
	if x != nil {
		return x.Pair
	}
	return ""
}

// Collection of events.
type GetEventsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Events []*Event `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *GetEventsReply) Reset() {
	*x = GetEventsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eth_eth_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEventsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEventsReply) ProtoMessage() {}

func (x *GetEventsReply) ProtoReflect() protoreflect.Message {
	mi := &file_eth_eth_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEventsReply.ProtoReflect.Descriptor instead.
func (*GetEventsReply) Descriptor() ([]byte, []int) {
	return file_eth_eth_service_proto_rawDescGZIP(), []int{1}
}

func (x *GetEventsReply) GetEvents() []*Event {
	if x != nil {
		return x.Events
	}
	return nil
}

// A blockchain deposit.
type Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockNumber     uint64 `protobuf:"varint,1,opt,name=block_number,json=blockNumber,proto3" json:"block_number,omitempty"`
	Commitment      string `protobuf:"bytes,2,opt,name=commitment,proto3" json:"commitment,omitempty"`
	LeafIndex       uint32 `protobuf:"varint,3,opt,name=leaf_index,json=leafIndex,proto3" json:"leaf_index,omitempty"`
	Timestamp       string `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	TransactionHash string `protobuf:"bytes,5,opt,name=transaction_hash,json=transactionHash,proto3" json:"transaction_hash,omitempty"`
}

func (x *Event) Reset() {
	*x = Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eth_eth_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_eth_eth_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_eth_eth_service_proto_rawDescGZIP(), []int{2}
}

func (x *Event) GetBlockNumber() uint64 {
	if x != nil {
		return x.BlockNumber
	}
	return 0
}

func (x *Event) GetCommitment() string {
	if x != nil {
		return x.Commitment
	}
	return ""
}

func (x *Event) GetLeafIndex() uint32 {
	if x != nil {
		return x.LeafIndex
	}
	return 0
}

func (x *Event) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *Event) GetTransactionHash() string {
	if x != nil {
		return x.TransactionHash
	}
	return ""
}

// Collection of chains.
type GetChainsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Chains []*Chain `protobuf:"bytes,1,rep,name=chains,proto3" json:"chains,omitempty"`
}

func (x *GetChainsReply) Reset() {
	*x = GetChainsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eth_eth_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChainsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChainsReply) ProtoMessage() {}

func (x *GetChainsReply) ProtoReflect() protoreflect.Message {
	mi := &file_eth_eth_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChainsReply.ProtoReflect.Descriptor instead.
func (*GetChainsReply) Descriptor() ([]byte, []int) {
	return file_eth_eth_service_proto_rawDescGZIP(), []int{3}
}

func (x *GetChainsReply) GetChains() []*Chain {
	if x != nil {
		return x.Chains
	}
	return nil
}

// Am EVM chain.
type Chain struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name           string          `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Chain          string          `protobuf:"bytes,2,opt,name=chain,proto3" json:"chain,omitempty"`
	Network        string          `protobuf:"bytes,3,opt,name=network,proto3" json:"network,omitempty"`
	Icon           string          `protobuf:"bytes,4,opt,name=icon,proto3" json:"icon,omitempty"`
	Rpc            []string        `protobuf:"bytes,5,rep,name=rpc,proto3" json:"rpc,omitempty"`
	Faucet         []string        `protobuf:"bytes,6,rep,name=faucet,proto3" json:"faucet,omitempty"`
	NativeCurrency *NativeCurrency `protobuf:"bytes,7,opt,name=native_currency,json=nativeCurrency,proto3" json:"native_currency,omitempty"`
	InfoUrl        string          `protobuf:"bytes,8,opt,name=info_url,json=infoUrl,proto3" json:"info_url,omitempty"`
	ShortName      string          `protobuf:"bytes,9,opt,name=short_name,json=shortName,proto3" json:"short_name,omitempty"`
	ChainId        uint64          `protobuf:"varint,10,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	NetworkId      uint64          `protobuf:"varint,11,opt,name=network_id,json=networkId,proto3" json:"network_id,omitempty"`
	Ens            *Ens            `protobuf:"bytes,12,opt,name=ens,proto3" json:"ens,omitempty"`
	Explorers      []*Explorer     `protobuf:"bytes,13,rep,name=explorers,proto3" json:"explorers,omitempty"`
}

func (x *Chain) Reset() {
	*x = Chain{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eth_eth_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Chain) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Chain) ProtoMessage() {}

func (x *Chain) ProtoReflect() protoreflect.Message {
	mi := &file_eth_eth_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Chain.ProtoReflect.Descriptor instead.
func (*Chain) Descriptor() ([]byte, []int) {
	return file_eth_eth_service_proto_rawDescGZIP(), []int{4}
}

func (x *Chain) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Chain) GetChain() string {
	if x != nil {
		return x.Chain
	}
	return ""
}

func (x *Chain) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *Chain) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *Chain) GetRpc() []string {
	if x != nil {
		return x.Rpc
	}
	return nil
}

func (x *Chain) GetFaucet() []string {
	if x != nil {
		return x.Faucet
	}
	return nil
}

func (x *Chain) GetNativeCurrency() *NativeCurrency {
	if x != nil {
		return x.NativeCurrency
	}
	return nil
}

func (x *Chain) GetInfoUrl() string {
	if x != nil {
		return x.InfoUrl
	}
	return ""
}

func (x *Chain) GetShortName() string {
	if x != nil {
		return x.ShortName
	}
	return ""
}

func (x *Chain) GetChainId() uint64 {
	if x != nil {
		return x.ChainId
	}
	return 0
}

func (x *Chain) GetNetworkId() uint64 {
	if x != nil {
		return x.NetworkId
	}
	return 0
}

func (x *Chain) GetEns() *Ens {
	if x != nil {
		return x.Ens
	}
	return nil
}

func (x *Chain) GetExplorers() []*Explorer {
	if x != nil {
		return x.Explorers
	}
	return nil
}

// Info of a native currency.
type NativeCurrency struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Symbol   string `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Decimals uint64 `protobuf:"varint,3,opt,name=decimals,proto3" json:"decimals,omitempty"`
}

func (x *NativeCurrency) Reset() {
	*x = NativeCurrency{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eth_eth_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NativeCurrency) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NativeCurrency) ProtoMessage() {}

func (x *NativeCurrency) ProtoReflect() protoreflect.Message {
	mi := &file_eth_eth_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NativeCurrency.ProtoReflect.Descriptor instead.
func (*NativeCurrency) Descriptor() ([]byte, []int) {
	return file_eth_eth_service_proto_rawDescGZIP(), []int{5}
}

func (x *NativeCurrency) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NativeCurrency) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *NativeCurrency) GetDecimals() uint64 {
	if x != nil {
		return x.Decimals
	}
	return 0
}

// Info of an ENS registry.
type Ens struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Registry string `protobuf:"bytes,1,opt,name=registry,proto3" json:"registry,omitempty"`
}

func (x *Ens) Reset() {
	*x = Ens{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eth_eth_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ens) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ens) ProtoMessage() {}

func (x *Ens) ProtoReflect() protoreflect.Message {
	mi := &file_eth_eth_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ens.ProtoReflect.Descriptor instead.
func (*Ens) Descriptor() ([]byte, []int) {
	return file_eth_eth_service_proto_rawDescGZIP(), []int{6}
}

func (x *Ens) GetRegistry() string {
	if x != nil {
		return x.Registry
	}
	return ""
}

// Info of a chain explorer.
type Explorer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Url      string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	Standard string `protobuf:"bytes,3,opt,name=standard,proto3" json:"standard,omitempty"`
}

func (x *Explorer) Reset() {
	*x = Explorer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eth_eth_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Explorer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Explorer) ProtoMessage() {}

func (x *Explorer) ProtoReflect() protoreflect.Message {
	mi := &file_eth_eth_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Explorer.ProtoReflect.Descriptor instead.
func (*Explorer) Descriptor() ([]byte, []int) {
	return file_eth_eth_service_proto_rawDescGZIP(), []int{7}
}

func (x *Explorer) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Explorer) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Explorer) GetStandard() string {
	if x != nil {
		return x.Standard
	}
	return ""
}

var File_eth_eth_service_proto protoreflect.FileDescriptor

var file_eth_eth_service_proto_rawDesc = []byte{
	0x0a, 0x15, 0x65, 0x74, 0x68, 0x2f, 0x65, 0x74, 0x68, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x65, 0x74, 0x68, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x22, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x4d,
	0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x69, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x70, 0x61, 0x69, 0x72, 0x22, 0x3e, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2c, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x65, 0x74, 0x68, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x22, 0xb2, 0x01, 0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x65, 0x61, 0x66, 0x5f, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6c, 0x65, 0x61, 0x66, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x12, 0x29, 0x0a, 0x10, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x68, 0x61, 0x73, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x22, 0x3e, 0x0a, 0x0e, 0x47,
	0x65, 0x74, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2c, 0x0a,
	0x06, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x65, 0x74, 0x68, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68,
	0x61, 0x69, 0x6e, 0x52, 0x06, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x73, 0x22, 0xa2, 0x03, 0x0a, 0x05,
	0x43, 0x68, 0x61, 0x69, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x12,
	0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x10, 0x0a,
	0x03, 0x72, 0x70, 0x63, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x72, 0x70, 0x63, 0x12,
	0x16, 0x0a, 0x06, 0x66, 0x61, 0x75, 0x63, 0x65, 0x74, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x06, 0x66, 0x61, 0x75, 0x63, 0x65, 0x74, 0x12, 0x46, 0x0a, 0x0f, 0x6e, 0x61, 0x74, 0x69, 0x76,
	0x65, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x65, 0x74, 0x68, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x52,
	0x0e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12,
	0x19, 0x0a, 0x08, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x69, 0x6e, 0x66, 0x6f, 0x55, 0x72, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x68,
	0x6f, 0x72, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x68, 0x6f, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f,
	0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x03, 0x65, 0x6e, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x65, 0x74, 0x68, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x45, 0x6e, 0x73, 0x52, 0x03, 0x65, 0x6e, 0x73, 0x12, 0x35, 0x0a, 0x09, 0x65, 0x78, 0x70,
	0x6c, 0x6f, 0x72, 0x65, 0x72, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65,
	0x74, 0x68, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x70,
	0x6c, 0x6f, 0x72, 0x65, 0x72, 0x52, 0x09, 0x65, 0x78, 0x70, 0x6c, 0x6f, 0x72, 0x65, 0x72, 0x73,
	0x22, 0x58, 0x0a, 0x0e, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x1a,
	0x0a, 0x08, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x08, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x22, 0x21, 0x0a, 0x03, 0x45, 0x6e,
	0x73, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x22, 0x4c, 0x0a,
	0x08, 0x45, 0x78, 0x70, 0x6c, 0x6f, 0x72, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12,
	0x1a, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x32, 0xbc, 0x01, 0x0a, 0x0a,
	0x45, 0x54, 0x48, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x58, 0x0a, 0x09, 0x47, 0x65,
	0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x1b, 0x2e, 0x65, 0x74, 0x68, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x4d, 0x73, 0x67, 0x1a, 0x1d, 0x2e, 0x65, 0x74, 0x68, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x0f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x09, 0x12, 0x07, 0x2f, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x12, 0x54, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x69, 0x6e,
	0x73, 0x12, 0x17, 0x2e, 0x65, 0x74, 0x68, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x4d, 0x73, 0x67, 0x1a, 0x1d, 0x2e, 0x65, 0x74, 0x68,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68,
	0x61, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x0f, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x09, 0x12, 0x07, 0x2f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x73, 0x42, 0x87, 0x01, 0x0a, 0x11, 0x63,
	0x6f, 0x6d, 0x2e, 0x65, 0x74, 0x68, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x42, 0x0f, 0x45, 0x74, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x50, 0x01, 0x5a, 0x5f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2d, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2f, 0x67, 0x6f, 0x6c,
	0x61, 0x6e, 0x67, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2d, 0x74, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x65, 0x74, 0x68, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x76, 0x31, 0x2f, 0x73, 0x72, 0x63, 0x2f, 0x65, 0x74, 0x68,
	0x3b, 0x65, 0x74, 0x68, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x76, 0x31, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_eth_eth_service_proto_rawDescOnce sync.Once
	file_eth_eth_service_proto_rawDescData = file_eth_eth_service_proto_rawDesc
)

func file_eth_eth_service_proto_rawDescGZIP() []byte {
	file_eth_eth_service_proto_rawDescOnce.Do(func() {
		file_eth_eth_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_eth_eth_service_proto_rawDescData)
	})
	return file_eth_eth_service_proto_rawDescData
}

var file_eth_eth_service_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_eth_eth_service_proto_goTypes = []interface{}{
	(*GetEventsMsg)(nil),   // 0: ethservice.v1.GetEventsMsg
	(*GetEventsReply)(nil), // 1: ethservice.v1.GetEventsReply
	(*Event)(nil),          // 2: ethservice.v1.Event
	(*GetChainsReply)(nil), // 3: ethservice.v1.GetChainsReply
	(*Chain)(nil),          // 4: ethservice.v1.Chain
	(*NativeCurrency)(nil), // 5: ethservice.v1.NativeCurrency
	(*Ens)(nil),            // 6: ethservice.v1.Ens
	(*Explorer)(nil),       // 7: ethservice.v1.Explorer
	(*src.EmptyMsg)(nil),   // 8: ethservice.v1.EmptyMsg
}
var file_eth_eth_service_proto_depIdxs = []int32{
	2, // 0: ethservice.v1.GetEventsReply.events:type_name -> ethservice.v1.Event
	4, // 1: ethservice.v1.GetChainsReply.chains:type_name -> ethservice.v1.Chain
	5, // 2: ethservice.v1.Chain.native_currency:type_name -> ethservice.v1.NativeCurrency
	6, // 3: ethservice.v1.Chain.ens:type_name -> ethservice.v1.Ens
	7, // 4: ethservice.v1.Chain.explorers:type_name -> ethservice.v1.Explorer
	0, // 5: ethservice.v1.ETHService.GetEvents:input_type -> ethservice.v1.GetEventsMsg
	8, // 6: ethservice.v1.ETHService.GetChains:input_type -> ethservice.v1.EmptyMsg
	1, // 7: ethservice.v1.ETHService.GetEvents:output_type -> ethservice.v1.GetEventsReply
	3, // 8: ethservice.v1.ETHService.GetChains:output_type -> ethservice.v1.GetChainsReply
	7, // [7:9] is the sub-list for method output_type
	5, // [5:7] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_eth_eth_service_proto_init() }
func file_eth_eth_service_proto_init() {
	if File_eth_eth_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_eth_eth_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEventsMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eth_eth_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEventsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eth_eth_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eth_eth_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChainsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eth_eth_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Chain); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eth_eth_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NativeCurrency); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eth_eth_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ens); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eth_eth_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Explorer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_eth_eth_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_eth_eth_service_proto_goTypes,
		DependencyIndexes: file_eth_eth_service_proto_depIdxs,
		MessageInfos:      file_eth_eth_service_proto_msgTypes,
	}.Build()
	File_eth_eth_service_proto = out.File
	file_eth_eth_service_proto_rawDesc = nil
	file_eth_eth_service_proto_goTypes = nil
	file_eth_eth_service_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ETHServiceClient is the client API for ETHService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ETHServiceClient interface {
	// Returns a event.
	GetEvents(ctx context.Context, in *GetEventsMsg, opts ...grpc.CallOption) (*GetEventsReply, error)
	// Return the chains.
	GetChains(ctx context.Context, in *src.EmptyMsg, opts ...grpc.CallOption) (*GetChainsReply, error)
}

type eTHServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewETHServiceClient(cc grpc.ClientConnInterface) ETHServiceClient {
	return &eTHServiceClient{cc}
}

func (c *eTHServiceClient) GetEvents(ctx context.Context, in *GetEventsMsg, opts ...grpc.CallOption) (*GetEventsReply, error) {
	out := new(GetEventsReply)
	err := c.cc.Invoke(ctx, "/ethservice.v1.ETHService/GetEvents", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eTHServiceClient) GetChains(ctx context.Context, in *src.EmptyMsg, opts ...grpc.CallOption) (*GetChainsReply, error) {
	out := new(GetChainsReply)
	err := c.cc.Invoke(ctx, "/ethservice.v1.ETHService/GetChains", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ETHServiceServer is the server API for ETHService service.
type ETHServiceServer interface {
	// Returns a event.
	GetEvents(context.Context, *GetEventsMsg) (*GetEventsReply, error)
	// Return the chains.
	GetChains(context.Context, *src.EmptyMsg) (*GetChainsReply, error)
}

// UnimplementedETHServiceServer can be embedded to have forward compatible implementations.
type UnimplementedETHServiceServer struct {
}

func (*UnimplementedETHServiceServer) GetEvents(context.Context, *GetEventsMsg) (*GetEventsReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetEvents not implemented")
}
func (*UnimplementedETHServiceServer) GetChains(context.Context, *src.EmptyMsg) (*GetChainsReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetChains not implemented")
}

func RegisterETHServiceServer(s *grpc.Server, srv ETHServiceServer) {
	s.RegisterService(&_ETHService_serviceDesc, srv)
}

func _ETHService_GetEvents_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetEventsMsg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ETHServiceServer).GetEvents(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ethservice.v1.ETHService/GetEvents",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ETHServiceServer).GetEvents(ctx, req.(*GetEventsMsg))
	}
	return interceptor(ctx, in, info, handler)
}

func _ETHService_GetChains_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(src.EmptyMsg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ETHServiceServer).GetChains(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ethservice.v1.ETHService/GetChains",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ETHServiceServer).GetChains(ctx, req.(*src.EmptyMsg))
	}
	return interceptor(ctx, in, info, handler)
}

var _ETHService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ethservice.v1.ETHService",
	HandlerType: (*ETHServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetEvents",
			Handler:    _ETHService_GetEvents_Handler,
		},
		{
			MethodName: "GetChains",
			Handler:    _ETHService_GetChains_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "eth/eth_service.proto",
}
