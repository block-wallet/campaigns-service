name: Golang workflow

on:
  push:
    branches: ["**"]
    tags: ["v[0-9]+.[0-9]+.[0-9]+"]

env:
  GH_ACCESS_TOKEN: ${{ secrets.GH_ACCESS_TOKEN }}

jobs:
  test:
    runs-on: [self-hosted]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: "1.20"
      - run: git config --global url.https://$GH_ACCESS_TOKEN@github.com/.insteadOf https://github.com/
      - run: make lint
      - run: make test

  build:
    needs: test
    runs-on: [self-hosted]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: "1.20"
      - run: git config --global url.https://$GH_ACCESS_TOKEN@github.com/.insteadOf https://github.com/
      - run: make build

  docker-build:
    if: github.ref_type != 'tag' && github.ref_name != 'main'
    needs: build
    runs-on: [self-hosted]
    steps:
      - uses: actions/checkout@v3
      - run: make docker-build/service

  publish:
    if: github.ref_type == 'tag' || github.ref_name == 'main'
    needs: [test, build]
    runs-on: [self-hosted]
    steps:
      - uses: actions/checkout@v3

      - name: Define image tag
        id: define-image-tag
        run: |
          if [ $GITHUB_REF_TYPE  == "tag" ]
          then
            tag=$GITHUB_REF_NAME
          else
            tag=`echo ${GITHUB_SHA} | cut -c1-7`
          fi
          echo "::set-output name=tag::$tag"

      - name: Show image tag
        env:
          TAG: ${{ steps.define-image-tag.outputs.tag }}
        run: echo "$TAG"

      - name: Login to Amazon ECR
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: make docker-login

      - name: Build, tag, and push image to Amazon ECR
        env:
          TAG: ${{ steps.define-image-tag.outputs.tag }}
        run: make docker-publish/service TAG=$TAG
